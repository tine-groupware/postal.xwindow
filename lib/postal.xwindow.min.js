/*!
 *  * postal.xwindow - postal.js/postal.federation plugin for federating instances of postal.js across unrelated window boundaries.
 *  * Author: Cornelius Wei√ü (http://www.metaways.de)
 *  * Version: v0.0.8
 *  * Url: http://github.com/tine20/postal.xwindow
 *  * License(s): (MIT OR GPL-2.0)
 */
(function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n(require("lodash"),require("postal")):"function"==typeof define&&define.amd?define(["lodash","postal"],n):"object"==typeof exports?exports.postalXWindow=n(require("lodash"),require("postal")):e.postalXWindow=n(e._,e.postal)})(this,function(e,n){return function(e){function n(r){if(t[r])return t[r].exports;var i=t[r]={exports:{},id:r,loaded:!1};return e[r].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}var t={};return n.m=e,n.c=t,n.p="",n(0)}([function(e,n,t){var r=t(1),i=t(2),s=t(3),a=t(4),o=a.state,f=a.env;t(5),t(8);var u=t(10);u.getInstance=function(e,n,t){return new u(e,n,t)},i.fedx.transports.xwindow={eagerSerialize:f.useEagerSerialize,remotes:[],XWindowClient:u,configure:function(e){return e&&(o.config=r.defaults(r.extend(o.config,e),o.defaults)),o.config},clearConfiguration:function(){o.config=r.extend({},o.defaults)},disconnect:function(e){e=e||{};var n=e.instanceId?r.reduce(r.isArray(e.instanceId)?e.instanceId:[e.instanceId],r.bind(s._memoRemoteByInstanceId,this),[]):e.target?r.reduce(r.isArray(e.target)?e.target:[e.target],r.bind(s._memoRemoteByTarget,this),[]):this.remotes;e.doNotNotify||r.forEach(n,r.bind(s._disconnectClient,this)),this.remotes=r.without.apply(null,[this.remotes].concat(n))},getTargets:function(){return this.tidyStorage()},sendMessage:function(e){var n=e;o.config.safeSerialize&&(n=s.safeSerialize(r.cloneDeep(e)));var t=i.instanceId();r.forEach(this.remotes,function(e){e.instanceId!=t&&e.sendMessage(n)})},wrapForTransport:f.useEagerSerialize?function(e){return JSON.stringify({postal:!0,packingSlip:e})}:function(e){return{postal:!0,packingSlip:e}},unwrapFromTransport:function(e){if("string"!=typeof e||!f.useEagerSerialize&&e.indexOf('"postal":true')===-1)return e;try{return JSON.parse(e)}catch(n){return{}}},routeMessage:function(e){var n=this.unwrapFromTransport(e.newValue);if(n&&n.postal){var t=n.packingSlip,a=t.instanceId;if(t&&a!=i.instanceId()){var f=r.find(this.remotes,function(e){return e.instanceId===a});if(!f){var c=store.namespace(o.config.localStoragePrefix+"."+a);f=u.getInstance(c,{origin:c.get("targetUrl")},a),this.remotes.push(f)}var d=s.parseUri(e.url),l=d.protocol+"://"+d.authority;f.options.origin==l&&f.onMessage(t)}}},signalReady:function(e,n){var t=i.instanceId(),s=this;this.target=store.namespace(o.config.localStoragePrefix+"."+t),this.target.on("message",r.bind(this.routeMessage,this)),this.keepAlive(),e=r.isArray(e)?e:[e],e=e.length?e:this.getTargets(),n=n||function(){},r.forEach(e,r.bind(function(e){if(e.targetId!=t){var i=r.find(s.remotes,function(n){return n.instanceId===e.targetId});i||(i=u.getInstance(e.target,{origin:e.origin},e.targetId),s.remotes.push(i)),i.sendPing(n)}},this))},keepAlive:function(){this.target.set("targetUrl",f.origin),this.target.set("targetTimeout",(new Date).getTime()+o.config.targetTimeout),this.tidyStorage(),this.tidyRemotes(),r.delay(r.bind(this.keepAlive,this),Math.round(o.config.targetTimeout/2))},tidyStorage:function(){var e=r.reduce(store.namespace(o.config.localStoragePrefix).getAll(),function(e,n,t){var i=t.split(".")[0];return r.indexOf(e,i)<0&&e.push(i),e},[]),n=(new Date).getTime();return r.reduce(e,function(e,t){var r=store.namespace(o.config.localStoragePrefix+"."+t);return r.get("targetTimeout")<n?r.clear():e.push({targetId:t,target:r,origin:r.get("targetUrl")}),e},[])},tidyRemotes:function(){var e=this;r.forEach(this.remotes,function(n){r.isEmpty(n.target.getAll())&&e.disconnect({target:n.target})})}}},function(n,t){n.exports=e},function(e,t){e.exports=n},function(e,n,t){var r=t(1),i=function(e,n){var t=r.find(this.remotes,function(e){return e.instanceId===n});return t&&e.push(t),e},s=function(e,n){var t=r.find(this.remotes,function(e){return e.target===n});return t&&e.push(t),e},a=function(e){e.disconnect()};safeSerialize=function(e){var n=JSON.parse(JSON.stringify(e,function(e,n){if("function"!=typeof n)return n}));return n};
// (c) Steven Levithan <stevenlevithan.com>
// MIT License
var o=function(e){for(var n=o.options,t=n.parser[n.strictMode?"strict":"loose"].exec(e),r={},i=14;i--;)r[n.key[i]]=t[i]||"";return r[n.q.name]={},r[n.key[12]].replace(n.q.parser,function(e,t,i){t&&(r[n.q.name][t]=i)}),r};o.options={strictMode:!1,key:["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"],q:{name:"queryKey",parser:/(?:^|&)([^&=]*)=?([^&]*)/g},parser:{strict:/^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,loose:/^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/}},e.exports={_memoRemoteByInstanceId:i,_memoRemoteByTarget:s,_disconnectClient:a,safeSerialize:safeSerialize,parseUri:o}},function(e,n,t){var r=t(1),i={origin:location.origin||location.protocol+"//"+location.host,isWorker:"undefined"==typeof window&&postMessage&&location,useEagerSerialize:/MSIE [8,9]/.test(navigator.userAgent)},s={allowedOrigins:[i.origin],enabled:!0,safeSerialize:!1,localStoragePrefix:"postal.fedx.xwindow",targetTimeout:6e4},a={workers:[],config:r.extend({},s),defaults:s};e.exports={state:a,env:i}},function(e,n,t){t(6)(t(7))},function(e,n){/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
e.exports=function(e){function n(e){"undefined"!=typeof console&&(console.error||console.log)("[Script Loader]",e)}function t(){return"undefined"!=typeof attachEvent&&"undefined"==typeof addEventListener}try{"undefined"!=typeof execScript&&t()?execScript(e):"undefined"!=typeof eval?eval.call(null,e):n("EvalError: No eval function available")}catch(r){n(r)}}},function(e,n){e.exports="/*! store2 - v2.5.11 - 2018-01-18\n* Copyright (c) 2018 Nathan Bubna; Licensed (MIT OR GPL-3.0) */\n;(function(window, define) {\n    var _ = {\n        version: \"2.5.11\",\n        areas: {},\n        apis: {},\n\n        // utilities\n        inherit: function(api, o) {\n            for (var p in api) {\n                if (!o.hasOwnProperty(p)) {\n                    o[p] = api[p];\n                }\n            }\n            return o;\n        },\n        stringify: function(d) {\n            return d === undefined || typeof d === \"function\" ? d+'' : JSON.stringify(d);\n        },\n        parse: function(s) {\n            // if it doesn't parse, return as is\n            try{ return JSON.parse(s); }catch(e){ return s; }\n        },\n\n        // extension hooks\n        fn: function(name, fn) {\n            _.storeAPI[name] = fn;\n            for (var api in _.apis) {\n                _.apis[api][name] = fn;\n            }\n        },\n        get: function(area, key){ return area.getItem(key); },\n        set: function(area, key, string){ area.setItem(key, string); },\n        remove: function(area, key){ area.removeItem(key); },\n        key: function(area, i){ return area.key(i); },\n        length: function(area){ return area.length; },\n        clear: function(area){ area.clear(); },\n\n        // core functions\n        Store: function(id, area, namespace) {\n            var store = _.inherit(_.storeAPI, function(key, data, overwrite) {\n                if (arguments.length === 0){ return store.getAll(); }\n                if (typeof data === \"function\"){ return store.transact(key, data, overwrite); }// fn=data, alt=overwrite\n                if (data !== undefined){ return store.set(key, data, overwrite); }\n                if (typeof key === \"string\" || typeof key === \"number\"){ return store.get(key); }\n                if (!key){ return store.clear(); }\n                return store.setAll(key, data);// overwrite=data, data=key\n            });\n            store._id = id;\n            try {\n                var testKey = '_safariPrivate_';\n                area.setItem(testKey, 'sucks');\n                store._area = area;\n                area.removeItem(testKey);\n            } catch (e) {}\n            if (!store._area) {\n                store._area = _.inherit(_.storageAPI, { items: {}, name: 'fake' });\n            }\n            store._ns = namespace || '';\n            if (!_.areas[id]) {\n                _.areas[id] = store._area;\n            }\n            if (!_.apis[store._ns+store._id]) {\n                _.apis[store._ns+store._id] = store;\n            }\n            return store;\n        },\n        storeAPI: {\n            // admin functions\n            area: function(id, area) {\n                var store = this[id];\n                if (!store || !store.area) {\n                    store = _.Store(id, area, this._ns);//new area-specific api in this namespace\n                    if (!this[id]){ this[id] = store; }\n                }\n                return store;\n            },\n            namespace: function(namespace, noSession) {\n                if (!namespace){\n                    return this._ns ? this._ns.substring(0,this._ns.length-1) : '';\n                }\n                var ns = namespace, store = this[ns];\n                if (!store || !store.namespace) {\n                    store = _.Store(this._id, this._area, this._ns+ns+'.');//new namespaced api\n                    if (!this[ns]){ this[ns] = store; }\n                    if (!noSession){ store.area('session', _.areas.session); }\n                }\n                return store;\n            },\n            isFake: function(){ return this._area.name === 'fake'; },\n            toString: function() {\n                return 'store'+(this._ns?'.'+this.namespace():'')+'['+this._id+']';\n            },\n\n            // storage functions\n            has: function(key) {\n                if (this._area.has) {\n                    return this._area.has(this._in(key));//extension hook\n                }\n                return !!(this._in(key) in this._area);\n            },\n            size: function(){ return this.keys().length; },\n            each: function(fn, _and) {// _and is purely for internal use (see keys())\n                for (var i=0, m=_.length(this._area); i<m; i++) {\n                    var key = this._out(_.key(this._area, i));\n                    if (key !== undefined) {\n                        if (fn.call(this, key, _and || this.get(key)) === false) {\n                            break;\n                        }\n                    }\n                    if (m > _.length(this._area)) { m--; i--; }// in case of removeItem\n                }\n                return _and || this;\n            },\n            keys: function() {\n                return this.each(function(k, list){ list.push(k); }, []);\n            },\n            get: function(key, alt) {\n                var s = _.get(this._area, this._in(key));\n                return s !== null ? _.parse(s) : alt || s;// support alt for easy default mgmt\n            },\n            getAll: function() {\n                return this.each(function(k, all){ all[k] = this.get(k); }, {});\n            },\n            transact: function(key, fn, alt) {\n                var val = this.get(key, alt),\n                    ret = fn(val);\n                this.set(key, ret === undefined ? val : ret);\n                return this;\n            },\n            set: function(key, data, overwrite) {\n                var d = this.get(key);\n                if (d != null && overwrite === false) {\n                    return data;\n                }\n                return _.set(this._area, this._in(key), _.stringify(data), overwrite) || d;\n            },\n            setAll: function(data, overwrite) {\n                var changed, val;\n                for (var key in data) {\n                    val = data[key];\n                    if (this.set(key, val, overwrite) !== val) {\n                        changed = true;\n                    }\n                }\n                return changed;\n            },\n            remove: function(key) {\n                var d = this.get(key);\n                _.remove(this._area, this._in(key));\n                return d;\n            },\n            clear: function() {\n                if (!this._ns) {\n                    _.clear(this._area);\n                } else {\n                    this.each(function(k){ _.remove(this._area, this._in(k)); }, 1);\n                }\n                return this;\n            },\n            clearAll: function() {\n                var area = this._area;\n                for (var id in _.areas) {\n                    if (_.areas.hasOwnProperty(id)) {\n                        this._area = _.areas[id];\n                        this.clear();\n                    }\n                }\n                this._area = area;\n                return this;\n            },\n\n            // internal use functions\n            _in: function(k) {\n                if (typeof k !== \"string\"){ k = _.stringify(k); }\n                return this._ns ? this._ns + k : k;\n            },\n            _out: function(k) {\n                return this._ns ?\n                    k && k.indexOf(this._ns) === 0 ?\n                        k.substring(this._ns.length) :\n                        undefined : // so each() knows to skip it\n                    k;\n            }\n        },// end _.storeAPI\n        storageAPI: {\n            length: 0,\n            has: function(k){ return this.items.hasOwnProperty(k); },\n            key: function(i) {\n                var c = 0;\n                for (var k in this.items){\n                    if (this.has(k) && i === c++) {\n                        return k;\n                    }\n                }\n            },\n            setItem: function(k, v) {\n                if (!this.has(k)) {\n                    this.length++;\n                }\n                this.items[k] = v;\n            },\n            removeItem: function(k) {\n                if (this.has(k)) {\n                    delete this.items[k];\n                    this.length--;\n                }\n            },\n            getItem: function(k){ return this.has(k) ? this.items[k] : null; },\n            clear: function(){ for (var k in this.items){ this.removeItem(k); } },\n            toString: function(){ return this.length+' items in '+this.name+'Storage'; }\n        }// end _.storageAPI\n    };\n\n    var store =\n        // safely set this up (throws error in IE10/32bit mode for local files)\n        _.Store(\"local\", (function(){try{ return localStorage; }catch(e){}})());\n    store.local = store;// for completeness\n    store._ = _;// for extenders and debuggers...\n    // safely setup store.session (throws exception in FF for file:/// urls)\n    store.area(\"session\", (function(){try{ return sessionStorage; }catch(e){}})());\n\n    if (typeof define === 'function' && define.amd !== undefined) {\n        define('store2', [], function () {\n            return store;\n        });\n    } else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = store;\n    } else {\n        // expose the primary store fn to the global object and save conflicts\n        if (window.store){ _.conflict = window.store; }\n        window.store = store;\n    }\n\n})(this, this.define);\n"},function(e,n,t){t(6)(t(9))},function(e,n){e.exports="/**\n * Copyright (c) 2013 ESHA Research\n * Dual licensed under the MIT and GPL licenses:\n *   http://www.opensource.org/licenses/mit-license.php\n *   http://www.gnu.org/licenses/gpl.html\n *\n * Makes it easy to watch for storage events by enhancing the events and\n * allowing binding to particular keys and/or namespaces.\n *\n * // listen to particular key storage events (yes, this is namespace sensitive)\n * store.on('foo', function listenToFoo(e){ console.log('foo was changed:', e); });\n * store.off('foo', listenToFoo);\n *\n * // listen to all storage events\n * store.on(function storageEvent(e){ console.log('web storage:', e); });\n * store.off(storageEvent);\n * \n * Status: ALPHA - useful, if you don't mind incomplete browser support for events\n */\n;(function(window, document, _) {\n    _.fn('on', function(key, fn) {\n        if (!fn) { fn = key; key = ''; }// shift args when needed\n        var s = this,\n            bound,\n            id = _.id(this._area);\n        if (window.addEventListener) {\n            window.addEventListener(\"storage\", bound = function(e) {\n                var k = s._out(e.key);\n                if (k && (!key || k === key)) {// must match key if listener has one\n                    var eid = _.id(e.storageArea);\n                    if (!eid || id === eid) {// must match area, if event has a known one\n                        return fn.call(s, _.event(k, s, e));\n                    }\n                }\n            }, false);\n        } else {\n            document.attachEvent(\"onstorage\", bound = function() {\n                return fn.call(s, window.event);\n            });\n        }\n        fn['_'+key+'listener'] = bound;\n        return s;\n    });\n    _.fn('off', function(key, fn) {\n        if (!fn) { fn = key; key = ''; }// shift args when needed\n        var bound = fn['_'+key+'listener'];\n        if (window.removeEventListener) {\n            window.removeEventListener(\"storage\", bound);\n        } else {\n            document.detachEvent(\"onstorage\", bound);\n        }\n        return this;\n    });\n    _.event = function(k, s, e) {\n        var event = {\n            key: k,\n            namespace: s.namespace(),\n            newValue: _.parse(e.newValue),\n            oldValue: _.parse(e.oldValue),\n            url: e.url || e.uri,\n            storageArea: e.storageArea,\n            source: e.source,\n            timeStamp: e.timeStamp,\n            originalEvent: e\n        };\n        if (_.cache) {\n            var min = _.expires(e.newValue || e.oldValue);\n            if (min) {\n                event.expires = _.when(min);\n            }\n        }\n        return event;\n    };\n    _.id = function(area) {\n        for (var id in _.areas) {\n            if (area === _.areas[id]) {\n                return id;\n            }\n        }\n    };\n})(window, document, window.store._);"},function(e,n,t){var r=t(1),i=t(2),s=t(4),a=s.state,o=s.env,f=function(){i.fedx.FederationClient.apply(this,arguments)};f.prototype=r.create(i.fedx.FederationClient.prototype,{constructor:f,transportName:"xwindow",shouldProcess:function(){var e=!!a.config.allowedOrigins.length;return a.config.enabled&&("*"===this.options.origin||e&&r.includes(a.config.allowedOrigins,this.options.origin)||!e||this.options.isWorker&&r.includes(a.workers,this.target)||o.isWorker)},send:function(e){if(this.shouldProcess()){var n=i.fedx.transports.xwindow.wrapForTransport(e);this.target.set("message",n)}}}),e.exports=f}])});
//# sourceMappingURL=postal.xwindow.min.js.map
